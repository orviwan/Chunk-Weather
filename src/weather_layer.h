#ifndef WEATHER_LAYER_H
#define WEATHER_LAYER_H

typedef struct {
	Layer layer;
	BmpContainer icon_layer;
	TextLayer temp_layer;
	TextLayer temp_layer_background;
	TextLayer temp_layer_highlow;
	bool has_weather_icon;
	char temperature[6];
	char highlow[36];
} WeatherLayer;

typedef enum {
	WEATHER_ICON_TORNADO=0,
	WEATHER_ICON_TROPICAL_STORM=1,
	WEATHER_ICON_HURRICANE=2,
	WEATHER_ICON_SEVERE_THUNDERSTORMS=3,
	WEATHER_ICON_THUNDERSTORMS=4,
	WEATHER_ICON_MIXED_RAIN_AND_SNOW=5,
	WEATHER_ICON_MIXED_RAIN_AND_SLEET=6,
	WEATHER_ICON_MIXED_SNOW_AND_SLEET=7,
	WEATHER_ICON_FREEZING_DRIZZLE=8,
	WEATHER_ICON_DRIZZLE=9,
	WEATHER_ICON_FREEZING_RAIN=10,
	WEATHER_ICON_SHOWERS=11,
	WEATHER_ICON_SHOWERS2=12,
	WEATHER_ICON_SNOW_FLURRIES=13,
	WEATHER_ICON_LIGHT_SNOW_SHOWERS=14,
	WEATHER_ICON_BLOWING_SNOW=15,
	WEATHER_ICON_SNOW=16,
	WEATHER_ICON_HAIL=17,
	WEATHER_ICON_SLEET=18,
	WEATHER_ICON_DUST=19,
	WEATHER_ICON_FOGGY=20,
	WEATHER_ICON_HAZE=21,
	WEATHER_ICON_SMOKY=22,
	WEATHER_ICON_BLUSTERY=23,
	WEATHER_ICON_WINDY=24,
	WEATHER_ICON_COLD=25,
	WEATHER_ICON_CLOUDY=26,
	WEATHER_ICON_MOSTLY_CLOUDY_NIGHT=27,
	WEATHER_ICON_MOSTLY_CLOUDY_DAY=28,
	WEATHER_ICON_PARTLY_CLOUDY_NIGHT=29,
	WEATHER_ICON_PARTLY_CLOUDY_DAY=30,
	WEATHER_ICON_CLEAR_NIGHT=31,
	WEATHER_ICON_SUNNY=32,
	WEATHER_ICON_FAIR_NIGHT=33,
	WEATHER_ICON_FAIR_DAY=34,
	WEATHER_ICON_MIXED_RAIN_AND_HAIL=35,
	WEATHER_ICON_HOT=36,
	WEATHER_ICON_ISOLATED_THUNDERSTORMS=37,
	WEATHER_ICON_SCATTERED_THUNDERSTORMS=38,
	WEATHER_ICON_SCATTERED_THUNDERSTORMS2=39,
	WEATHER_ICON_SCATTERED_SHOWERS=40,
	WEATHER_ICON_HEAVY_SNOW=41,
	WEATHER_ICON_SCATTERED_SNOW_SHOWERS=42,
	WEATHER_ICON_HEAVY_SNOW2=43,
	WEATHER_ICON_PARTLY_CLOUDY=44,
	WEATHER_ICON_THUNDERSHOWERS=45,
	WEATHER_ICON_SNOW_SHOWERS=46,
	WEATHER_ICON_ISOLATED_THUNDERSHOWERS=47,
	WEATHER_ICON_NOT_AVAILABLE=48
} WeatherIcon;


void weather_layer_init(WeatherLayer* weather_layer);
void weather_layer_deinit(WeatherLayer* weather_layer);
void weather_layer_set_icon(WeatherLayer* weather_layer, WeatherIcon icon);
void weather_layer_set_temperature(WeatherLayer* weather_layer, int16_t temperature);
void weather_layer_set_highlow(WeatherLayer* weather_layer, int16_t high, int16_t low);
void weather_layer_set_loading(WeatherLayer* weather_layer);
void weather_layer_set_error(WeatherLayer* weather_layer, int http_status);

#endif
